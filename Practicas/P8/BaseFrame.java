
import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author guillermogirongarcia
 */
public class BaseFrame extends javax.swing.JFrame {

    /**
     * Creates new form BaseFrame
     */
    public BaseFrame() {
        initComponents();
        init();
    }
    
    private void init()
    {
        ButtonGroup.add(AButton);
        ButtonGroup.add(BButton);
        ButtonGroup.add(CButton);
        ButtonGroup.add(DButton);
        StopButton.setEnabled(false);
        NextButton.setEnabled(false);
        PauseButton.setEnabled(false);
        NPText.setEditable(false);
        PmText.setEditable(false);
        FrameText.setEditable(false);
        DensityText.setEditable(false);
        paused = false;
        autorun = false;
        currentGen = 1;
        generations = 0;
        Pm = 0.0f;
        NP = 0;
        lock = new ReentrantLock();
        unpaused = lock.newCondition();
        speed = 500L;
    }
    
    private void TumoralGrowth() throws InterruptedException
    {
        while(currentGen <= generations)
        {
            if(paused)
            {
                lock.lock();
                try {
                    unpaused.await();
                } finally {
                    lock.unlock();
                }
            }
            
            reticle.growth();
            reticle.repaint();
            FrameText.setText(String.valueOf(currentGen));
            DensityText.setText(reticle.density() + " %");
            
            curve.addDensity((int) reticle.density());
            curve.repaint();
            
            try 
            {
                Thread.sleep(speed);
            } catch (InterruptedException ex) 
            {}
            
            ++currentGen;
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ButtonGroup = new javax.swing.ButtonGroup();
        SimPanel = new javax.swing.JPanel();
        GenerationLabel = new javax.swing.JLabel();
        GenerationText = new javax.swing.JFormattedTextField();
        ParametersPanel = new javax.swing.JPanel();
        NPLabel = new javax.swing.JLabel();
        NPText = new javax.swing.JTextField();
        PmLabel = new javax.swing.JLabel();
        PmText = new javax.swing.JTextField();
        AButton = new javax.swing.JRadioButton();
        BButton = new javax.swing.JRadioButton();
        CButton = new javax.swing.JRadioButton();
        DButton = new javax.swing.JRadioButton();
        AutorunCheck = new javax.swing.JCheckBox();
        RunButton = new javax.swing.JButton();
        NextButton = new javax.swing.JButton();
        StopButton = new javax.swing.JButton();
        PauseButton = new javax.swing.JButton();
        FrameLabel = new javax.swing.JLabel();
        FrameText = new javax.swing.JTextField();
        DensityLabel = new javax.swing.JLabel();
        DensityText = new javax.swing.JTextField();
        SpeedSlider = new javax.swing.JSlider();
        SlowLabel = new javax.swing.JLabel();
        FastLabel = new javax.swing.JLabel();
        CurvePanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tumoral Growth");
        setMaximumSize(new java.awt.Dimension(1920, 1080));
        setMinimumSize(new java.awt.Dimension(400, 400));
        setName("gui"); // NOI18N
        setSize(new java.awt.Dimension(1920, 1080));

        SimPanel.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        SimPanel.setMaximumSize(new java.awt.Dimension(1000, 1000));
        SimPanel.setPreferredSize(new java.awt.Dimension(1000, 1000));

        javax.swing.GroupLayout SimPanelLayout = new javax.swing.GroupLayout(SimPanel);
        SimPanel.setLayout(SimPanelLayout);
        SimPanelLayout.setHorizontalGroup(
            SimPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 996, Short.MAX_VALUE)
        );
        SimPanelLayout.setVerticalGroup(
            SimPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 996, Short.MAX_VALUE)
        );

        GenerationLabel.setText("Generations:");

        ParametersPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        NPLabel.setText("NP:");

        NPText.setText("0");

        PmLabel.setText("Pm:");

        PmText.setText("0");

        AButton.setText("A");
        AButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AButtonActionPerformed(evt);
            }
        });

        BButton.setText("B");
        BButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BButtonActionPerformed(evt);
            }
        });

        CButton.setText("C");
        CButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CButtonActionPerformed(evt);
            }
        });

        DButton.setText("D");
        DButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ParametersPanelLayout = new javax.swing.GroupLayout(ParametersPanel);
        ParametersPanel.setLayout(ParametersPanelLayout);
        ParametersPanelLayout.setHorizontalGroup(
            ParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ParametersPanelLayout.createSequentialGroup()
                .addContainerGap(56, Short.MAX_VALUE)
                .addGroup(ParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ParametersPanelLayout.createSequentialGroup()
                        .addGroup(ParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(PmLabel)
                            .addComponent(NPLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(NPText, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                            .addComponent(PmText)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ParametersPanelLayout.createSequentialGroup()
                        .addGroup(ParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(CButton)
                            .addComponent(AButton))
                        .addGap(18, 18, 18)
                        .addGroup(ParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BButton)
                            .addComponent(DButton, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addContainerGap())))
        );
        ParametersPanelLayout.setVerticalGroup(
            ParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ParametersPanelLayout.createSequentialGroup()
                .addGroup(ParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NPText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NPLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PmLabel)
                    .addComponent(PmText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(ParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BButton)
                    .addComponent(AButton))
                .addGap(18, 18, 18)
                .addGroup(ParametersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CButton)
                    .addComponent(DButton))
                .addGap(0, 8, Short.MAX_VALUE))
        );

        AutorunCheck.setText("Autorun");
        AutorunCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AutorunCheckActionPerformed(evt);
            }
        });

        RunButton.setText("Run");
        RunButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RunButtonActionPerformed(evt);
            }
        });

        NextButton.setText("Next. Iteration");
        NextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextButtonActionPerformed(evt);
            }
        });

        StopButton.setText("Stop");
        StopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StopButtonActionPerformed(evt);
            }
        });

        PauseButton.setText("Pause");
        PauseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PauseButtonActionPerformed(evt);
            }
        });

        FrameLabel.setText("Frame:");

        FrameText.setText("0");

        DensityLabel.setText("Density:");

        DensityText.setText("0 %");

        SpeedSlider.setMaximum(3);
        SpeedSlider.setMinimum(1);
        SpeedSlider.setValue(1);
        SpeedSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SpeedSliderStateChanged(evt);
            }
        });

        SlowLabel.setText("Slow");

        FastLabel.setText("Fast");

        CurvePanel.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        CurvePanel.setPreferredSize(new java.awt.Dimension(300, 300));

        javax.swing.GroupLayout CurvePanelLayout = new javax.swing.GroupLayout(CurvePanel);
        CurvePanel.setLayout(CurvePanelLayout);
        CurvePanelLayout.setHorizontalGroup(
            CurvePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 296, Short.MAX_VALUE)
        );
        CurvePanelLayout.setVerticalGroup(
            CurvePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 296, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SimPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(SpeedSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1048, 1048, 1048))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(SlowLabel)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(23, 23, 23)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                            .addComponent(StopButton)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                            .addComponent(PauseButton))
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                            .addComponent(RunButton)
                                                            .addGap(18, 18, 18)
                                                            .addComponent(AutorunCheck)))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addGroup(layout.createSequentialGroup()
                                                            .addComponent(GenerationLabel)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                            .addComponent(GenerationText, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(ParametersPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                .addComponent(DensityLabel)
                                                                .addComponent(FrameLabel))
                                                            .addGap(40, 40, 40)
                                                            .addComponent(FrameText, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                .addComponent(NextButton, javax.swing.GroupLayout.Alignment.TRAILING))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(FastLabel)
                                                .addGap(55, 55, 55))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(138, 138, 138)
                                        .addComponent(DensityText, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(112, 112, 112))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(CurvePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GenerationText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GenerationLabel))
                .addGap(18, 18, 18)
                .addComponent(ParametersPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AutorunCheck)
                    .addComponent(RunButton))
                .addGap(18, 18, 18)
                .addComponent(NextButton)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StopButton)
                    .addComponent(PauseButton))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FrameLabel)
                    .addComponent(FrameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DensityLabel)
                    .addComponent(DensityText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SlowLabel)
                    .addComponent(FastLabel))
                .addGap(18, 18, 18)
                .addComponent(SpeedSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(CurvePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 36, Short.MAX_VALUE)
                .addComponent(SimPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BButtonActionPerformed
        NP = 1;
        Pm = 0.8f;
        NPText.setText(String.valueOf(NP));
        PmText.setText(String.valueOf(Pm));
    }//GEN-LAST:event_BButtonActionPerformed

    private void AButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AButtonActionPerformed
        NP = 1;
        Pm = 0.2f;
        NPText.setText(String.valueOf(NP));
        PmText.setText(String.valueOf(Pm));
    }//GEN-LAST:event_AButtonActionPerformed

    private void DButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DButtonActionPerformed
        NP = 2;
        Pm = 0.8f;
        NPText.setText(String.valueOf(NP));
        PmText.setText(String.valueOf(Pm));
    }//GEN-LAST:event_DButtonActionPerformed

    private void CButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CButtonActionPerformed
        NP = 2;
        Pm = 0.2f;
        NPText.setText(String.valueOf(NP));
        PmText.setText(String.valueOf(Pm));
    }//GEN-LAST:event_CButtonActionPerformed

    private void AutorunCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AutorunCheckActionPerformed
        autorun = !autorun;
    }//GEN-LAST:event_AutorunCheckActionPerformed

    private void RunButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RunButtonActionPerformed
        generations = 0;
        
        if(!GenerationText.getText().isBlank())
            generations = Integer.parseInt(GenerationText.getText());

        // Inicializacion de la reticula
        reticle = new tumoralGrowth(NP, Pm);
        SimPanel.add(reticle);
        reticle.repaint();
        
        // Plot density

        curve = new Curve();
        curve.addDensity((int) reticle.density());

        CurvePanel.add(curve);
        curve.repaint();

        exe = new ThreadPoolExecutor(1, 1, 1, TimeUnit.HOURS, new ArrayBlockingQueue<>(2));
        
        if(!autorun)
        {
            paused = true;
            PauseButton.setText("Resume");
            NextButton.setEnabled(true);
        }
        
        exe.execute(() -> {
            try {
                TumoralGrowth();
            } catch (InterruptedException ex) {
                Logger.getLogger(BaseFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
            
        exe.shutdown();
        PauseButton.setEnabled(true);
        RunButton.setEnabled(false);
        StopButton.setEnabled(true);
    }//GEN-LAST:event_RunButtonActionPerformed

    private void NextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextButtonActionPerformed
        lock.lock();
        try {
            unpaused.signal();
        } finally {
            lock.unlock();
        }
    }//GEN-LAST:event_NextButtonActionPerformed

    private void StopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StopButtonActionPerformed
        generations = 0;
        currentGen = 0;

        if(!exe.isShutdown())
            exe.shutdownNow();

        FrameText.setText("0");
        GenerationText.setText("");
        DensityText.setText("0 %");
        StopButton.setEnabled(false);
        NextButton.setEnabled(false);
        PauseButton.setEnabled(false);
        RunButton.setEnabled(true);
        SimPanel.remove(reticle);
        SimPanel.repaint();
        paused = false;
    }//GEN-LAST:event_StopButtonActionPerformed

    private void PauseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PauseButtonActionPerformed
         if (!paused) 
        {
            paused = true;
            PauseButton.setText("Resume");
        } else 
        {
            PauseButton.setText("Pause");
            paused = false;
            lock.lock();
             try {
                 unpaused.signal();
             } finally {
                 lock.unlock();
             }
        }

        NextButton.setEnabled(true);
    }//GEN-LAST:event_PauseButtonActionPerformed

    private void SpeedSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SpeedSliderStateChanged
        switch (SpeedSlider.getValue()) 
        {
            case 1:
                speed = 500L;
                break;
            case 2:
                speed = 150L;
                break;
            case 3:
                speed = 35L;
                break;
        }
    }//GEN-LAST:event_SpeedSliderStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BaseFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new BaseFrame().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton AButton;
    private javax.swing.JCheckBox AutorunCheck;
    private javax.swing.JRadioButton BButton;
    private javax.swing.ButtonGroup ButtonGroup;
    private javax.swing.JRadioButton CButton;
    private javax.swing.JPanel CurvePanel;
    private javax.swing.JRadioButton DButton;
    private javax.swing.JLabel DensityLabel;
    private javax.swing.JTextField DensityText;
    private javax.swing.JLabel FastLabel;
    private javax.swing.JLabel FrameLabel;
    private javax.swing.JTextField FrameText;
    private javax.swing.JLabel GenerationLabel;
    private javax.swing.JFormattedTextField GenerationText;
    private javax.swing.JLabel NPLabel;
    private javax.swing.JTextField NPText;
    private javax.swing.JButton NextButton;
    private javax.swing.JPanel ParametersPanel;
    private javax.swing.JButton PauseButton;
    private javax.swing.JLabel PmLabel;
    private javax.swing.JTextField PmText;
    private javax.swing.JButton RunButton;
    private javax.swing.JPanel SimPanel;
    private javax.swing.JLabel SlowLabel;
    private javax.swing.JSlider SpeedSlider;
    private javax.swing.JButton StopButton;
    // End of variables declaration//GEN-END:variables
    private int generations, currentGen, NP;
    private boolean paused, autorun;
    private ThreadPoolExecutor exe;
    private float Pm;
    private ReentrantLock lock;
    private Condition unpaused;
    private long speed;
    private tumoralGrowth reticle;
    private Curve curve;
}
